name: Deploy Telegram Bot to Yandex Cloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  YC_REGISTRY: cr.yandex
  IMAGE_NAME: telegram-bot-trips

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Yandex Cloud CLI
      run: |
        curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
        echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH

    - name: Configure Yandex Cloud CLI
      run: |
        echo '${{ secrets.YC_SA_KEY_JSON }}' > sa-key.json
        yc config profile create github-actions
        yc config set service-account-key sa-key.json
        yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
        yc config set folder-id ${{ secrets.YC_FOLDER_ID }}

    - name: Configure Docker for Yandex Container Registry
      run: |
        yc container registry configure-docker

    - name: Build and push Docker image
      run: |
        IMAGE_TAG=$YC_REGISTRY/${{ secrets.YC_IMAGE_REGISTRY_ID }}/$IMAGE_NAME:latest
        docker buildx build --platform linux/amd64 --push -t $IMAGE_TAG .

    - name: Deploy to Serverless Container
      run: |
        SA_ID=$(jq -r '.service_account_id' sa-key.json)
        echo "Using SA_ID=$SA_ID"
        yc serverless container revision deploy \
          --container-name ${{ secrets.SERVERLESS_CONTAINER_NAME }} \
          --image $YC_REGISTRY/${{ secrets.YC_IMAGE_REGISTRY_ID }}/$IMAGE_NAME:latest \
          --service-account-id "$SA_ID" \
          --environment="TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_APITOKEN }},GOOGLE_SA_JSON_PATH=./service_account.json,GOOGLE_SHEET_ID=${{ secrets.GOOGLE_SHEET_ID }},GOOGLE_SHEET_NAME=${{ secrets.GOOGLE_SHEET_NAME }},TIMEZONE=${{ secrets.TIMEZONE }},ADMIN_IDS=${{ secrets.ADMIN_IDS }}" \
          --core-fraction 50 \
          --memory 2GB \
          --execution-timeout 300s

    - name: Update API Gateway webhook
      run: |
        # Получаем URL API Gateway
        APIGW_URL=$(yc serverless api-gateway get --name ${{ secrets.SERVERLESS_CONTAINER_NAME }} --format json | jq -r '.domain')
        WEBHOOK_URL="https://${APIGW_URL}"
        
        # Обновляем webhook в Telegram
        curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_APITOKEN }}/setWebhook" \
          -H "Content-Type: application/json" \
          -d "{\"url\": \"${WEBHOOK_URL}\"}"

    - name: Clean up
      run: |
        rm -f sa-key.json
